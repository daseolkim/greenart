@charset "utf-8";
*{margin: 0; padding: 0%;}

.box{width: 100%; height: 100px; background-color: rgb(252, 192, 192);}
/* 왔다갔다가 자연스럽고싶으면 여기에 */

.box:hover{background-color: rgb(224, 24, 124); width: 300%;height: 300px;transition: 0.5s;}
/* 툭 끊기는 느낌이면 여기에 */

.box2{width: 600%;height: 300px; border: 1px solid rgb(253, 253, 253); cursor: pointer; transition: 1s;}
.box2:hover{border: 1px solid rgb(86, 236, 72); }

p:hover{text-decoration: underline; font-weight: bold; color: blueviolet; transition: 1s;}

body{background-color: rgb(226, 153, 198);}

/* :hover-가상요소 /  실제로는 존재하지않는요소
해당 선택자 요소에 마우스가 올라 갔을때 이벤트 속성을 지정하며,
마우스가 빠져나왔을때 초기값으로 돌아간다.
선택자:hover 사용시 절대로 띄어쓰기 금지

예) .box:hover(o) / .box : hover(x) / .box: hover(x) / .box :hover (x) 
다만 마지막은 자식 혹은 자손 선택자가 hover 이벤트가 동작

1s - 1000ms - 1초
0.5 - 500ms - 0.5초
delay 도 사용가능 뒤쪽시간을 작성시 해당 시간 뒤에 동작
예) transition 1s 2s사용시 2초를 기다렷다가 1초동안 동작
만 약 각각 요소별로 다르게 설정해야 할시에 , 를 적용해서 사용
예) transition: width 1s, height 2s, bgc-3s

사용법: transition: 선택자 총 진행시간 속도 딜레이
--- 속도 / 딜레 / 선택자는 생략가능 총 진행시간은 필수작성 ---
단, 속성 생략시 해당요소의 전체 속성으로 동작

속도
ease > 기본값 - 천천히 시작해서 빠르게 진행되며 천천히 끝남
linear > 첨부터 끝까지 동일한 속도
ease-in > 천천히시작 빠르게 종료
ease-out > 빠르게 시작 천천히 종료
ease-in-out > 천천히 시작하여 잠시 가속한뒤 천천히 종료
step-start > 시작과 동시에 종료
step-end > 종료와 동시에 시작

*/


.box{
    width: 16%; height: 16px; 
    background-color: rgb(127, 16, 190);
    transition: 4s 2s;
}
input:checked ~ .box{width: 100%;}
.tr1{transition-timing-function: ease;}
.tr2{transition-timing-function: linear;}
.tr3{transition-timing-function: ease-in;}
.tr4{transition-timing-function: ease-out;}
.tr5{transition-timing-function: ease-in-out;}
.tr6{transition-timing-function: step-start;}
.tr7{transition-timing-function: step-end;}